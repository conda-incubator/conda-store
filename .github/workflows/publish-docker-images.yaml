name: Build Docker Images

on:
  create: # Branch (so that the Docker image tags exist for a new branch when pushed)
          # even if nothing on 'paths' below is changed.
    branches:
      - '**'

  push:
    paths:
      - "conda-store/**"
      - "conda-store-server/**"
      - ".github/workflows/publish-docker-images.yaml"

    branches: # Only on paths above
      - '**'

    tags: # Always, regardless of paths above
      - '*'

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile:
          - conda-store
          - conda-store-server
    steps:
      - name: Checkout Infrastructure
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Quay Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            "quansight/${{ matrix.dockerfile }}"
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Build docker
        uses: docker/build-push-action@v2
        with:
          context: "./${{ matrix.dockerfile }}/"
          file: "./${{ matrix.dockerfile }}/Dockerfile"
          tags: |
            ghcr.io/${{ steps.meta.outputs.tags }}
            quay.io/${{ steps.meta.outputs.tags }}
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
