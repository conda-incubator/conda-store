name: "Release"

on:
  push:
    tags:
      - 'v*'

jobs:
  release-conda-store-server:
    name: 'PyPi Release conda-store-server'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: conda-store-server
    steps:
      - name: 'Checkout Infrastructure'
        uses: actions/checkout@main
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install twine
        run: |
          pip install twine
      - name: Build and Distribute
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist
          twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*

  release-conda-store:
    name: 'PyPi Release conda-store'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: conda-store
    steps:
      - name: 'Checkout Infrastructure'
        uses: actions/checkout@main
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install twine and jupyter-packaging
        run: |
          pip install twine
      - name: Build and Distribute
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        shell: bash -l {0}
        run: |
          python setup.py sdist
          twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*

  docker:
    name: 'Build Docker Release Images'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker-image:
          - conda-store
          - conda-store-server
    steps:
      - name: 'Checkout Infrastructure'
        uses: actions/checkout@master
      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Docker Build, Tag, Push Image
        env:
          IMAGE_NAME: quansight/${{ matrix.docker-image }}
        run: |
          docker build -t $IMAGE_NAME:${GITHUB_REF#refs/*/} ${{ matrix.docker-image }}
          docker push $IMAGE_NAME:${GITHUB_REF#refs/*/}
      - name: Docker Logout
        run: |
          docker logout
