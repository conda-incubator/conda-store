name: "Release"

on:
  push:
    tags:
      - 'v*'

jobs:
  release-conda-store-server:
    name: 'PyPi Release conda-store-server'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: conda-store-server
    steps:
      - name: 'Checkout Infrastructure'
        uses: actions/checkout@main
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install twine
        run: |
          pip install twine
      - name: Build and Distribute
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist
          twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*

  release-conda-store:
    name: 'PyPi Release conda-store'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: conda-store
    steps:
      - name: 'Checkout Infrastructure'
        uses: actions/checkout@main
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install twine and jupyter-packaging
        run: |
          pip install twine
      - name: Build and Distribute
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        shell: bash -l {0}
        run: |
          python setup.py sdist
          twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*

  docker:
    name: 'Build Docker Release Images'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker-image:
          - conda-store
          - conda-store-server
    steps:
      - name: 'Checkout Infrastructure'
        uses: actions/checkout@master
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Lint Dockerfiles
        uses: jbergstroem/hadolint-gh-action@v1
        with:
          dockerfile: ${{ matrix.docker-image }}/Dockerfile
          output_format: tty
          error_level: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            quansight/${{ matrix.docker-image }}
          tags: |
            type=ref,event=tag

      - name: Build docker
        uses: docker/build-push-action@v2
        with:
          context: "${{ matrix.docker-image }}"
          file: "${{ matrix.docker-image }}/Dockerfile"
          tags: |
            ${{ steps.meta.outputs.tags }}
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
