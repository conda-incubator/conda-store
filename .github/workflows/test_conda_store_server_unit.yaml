name: "Test conda-store-server (unit)"

env:
  # needs to keep the same as the conda-store-server/environment-dev.yaml
  DEFAULT_PYTHON_VERSION: "3.10"
  FORCE_COLOR: "1" # Make tools pretty.
  PYTHONUNBUFFERED: "1" # Make stdout and stderr behave well

on:
  pull_request:
    paths:
      - ".github/workflows/**"
      - ".github/actions/**"
      - "conda-store/**"
      - "conda-store-server/**"
      - "examples/**"
      - "tests/**"
  push:
    branches:
      - main

# ensuring only one instance is running at a given time
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  linting:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: conda-store-server
    steps:
      - name: "Checkout Repository üõé"
        uses: actions/checkout@v4

      - name: "Set up Python üêç"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}

      - name: "Install Dependencies üì¶"
        run: |
          python -m pip install hatch

      - name: "Linting Checks üßπ"
        run: |
          hatch env run -e lint lint

  test-conda-store-server:
    name: "unit-test - ${{ matrix.os}} "
    strategy:
      matrix:
        # ubuntu 22.04, macos 14, windows 2022
        # os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
        working-directory: conda-store-server
    steps:
      - name: "Checkout Repository üõé"
        uses: actions/checkout@v4

      - name: "Set up env ${{ matrix.os }} üêç"
        uses: conda-incubator/setup-miniconda@v3
        with:
            environment-file: conda-store-server/environment-dev.yaml
            miniforge-version: latest
            auto-activate-base: false
            activate-environment: conda-store-server-dev

      # This fixes a "DLL not found" issue importing ctypes from the hatch env
      - name: "Reinstall Python 3.10 on Windows runner"
        uses: nick-fields/retry@v2.8.3
        with:
          timeout_minutes: 9999
          max_attempts: 6
          command:
            conda install --channel=conda-forge --quiet --yes python=${{ env.DEFAULT_PYTHON_VERSION }}
        if: matrix.os == 'windows-latest'

      - name: "Install conda-store server üì¶"
        run: |
          python -m pip install .
          # some checks
          conda list
          which python

      - name: "Unit tests ‚úÖ"
        run: |
          python -m pytest ./tests/test_actions.py
          python -m pytest ./tests/test_app_api.py
      #     python -m pytest -m "not extended_prefix and not user_journey" tests

      # https://github.com/actions/runner-images/issues/1052
      - name: "Windows extended prefix unit tests ‚úÖ"
        shell: pwsh
        run: |
          Set-ItemProperty "HKLM:\System\CurrentControlSet\Control\FileSystem" `
            -Name "LongPathsEnabled" `
            -Value 0 `
            -Type DWord
          (Get-ItemProperty "HKLM:System\CurrentControlSet\Control\FileSystem").LongPathsEnabled
          pytest -m "extended_prefix" tests
        if: matrix.os == 'windows-latest'
