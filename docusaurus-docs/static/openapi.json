{
  "components": {
    "schemas": {
      "APIAckResponse": {
        "properties": {
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status"
        ],
        "title": "APIAckResponse",
        "type": "object"
      },
      "APIDeleteNamespaceRole": {
        "properties": {
          "other_namespace": {
            "title": "Other Namespace",
            "type": "string"
          }
        },
        "required": [
          "other_namespace"
        ],
        "title": "APIDeleteNamespaceRole",
        "type": "object"
      },
      "APIGetBuild": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Build"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "title": "APIGetBuild",
        "type": "object"
      },
      "APIGetEnvironment": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Environment"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "title": "APIGetEnvironment",
        "type": "object"
      },
      "APIGetNamespace": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Namespace"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "title": "APIGetNamespace",
        "type": "object"
      },
      "APIGetPermission": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/APIGetPermissionData"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "title": "APIGetPermission",
        "type": "object"
      },
      "APIGetPermissionData": {
        "properties": {
          "authenticated": {
            "title": "Authenticated",
            "type": "boolean"
          },
          "entity_permissions": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": "Entity Permissions",
            "type": "object"
          },
          "entity_roles": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": "Entity Roles",
            "type": "object"
          },
          "expiration": {
            "format": "date-time",
            "title": "Expiration",
            "type": "string"
          },
          "primary_namespace": {
            "title": "Primary Namespace",
            "type": "string"
          }
        },
        "required": [
          "authenticated",
          "primary_namespace",
          "entity_permissions",
          "entity_roles"
        ],
        "title": "APIGetPermissionData",
        "type": "object"
      },
      "APIGetSetting": {
        "properties": {
          "data": {
            "title": "Data",
            "type": "object"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "title": "APIGetSetting",
        "type": "object"
      },
      "APIGetSpecificationFormat": {
        "description": "An enumeration.",
        "enum": [
          "yaml",
          "lockfile"
        ],
        "title": "APIGetSpecificationFormat"
      },
      "APIGetStatus": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/APIGetStatusData"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "title": "APIGetStatus",
        "type": "object"
      },
      "APIGetStatusData": {
        "properties": {
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "version"
        ],
        "title": "APIGetStatusData",
        "type": "object"
      },
      "APIGetUsage": {
        "properties": {
          "data": {
            "additionalProperties": {
              "type": "object"
            },
            "title": "Data",
            "type": "object"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "title": "APIGetUsage",
        "type": "object"
      },
      "APIListBuild": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/Build"
            },
            "title": "Data",
            "type": "array"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data",
          "page",
          "size",
          "count"
        ],
        "title": "APIListBuild",
        "type": "object"
      },
      "APIListCondaChannel": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/CondaChannel"
            },
            "title": "Data",
            "type": "array"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data",
          "page",
          "size",
          "count"
        ],
        "title": "APIListCondaChannel",
        "type": "object"
      },
      "APIListCondaPackage": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/CondaPackage"
            },
            "title": "Data",
            "type": "array"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data",
          "page",
          "size",
          "count"
        ],
        "title": "APIListCondaPackage",
        "type": "object"
      },
      "APIListEnvironment": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/Environment"
            },
            "title": "Data",
            "type": "array"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data",
          "page",
          "size",
          "count"
        ],
        "title": "APIListEnvironment",
        "type": "object"
      },
      "APIListNamespace": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/Namespace"
            },
            "title": "Data",
            "type": "array"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data",
          "page",
          "size",
          "count"
        ],
        "title": "APIListNamespace",
        "type": "object"
      },
      "APIPostNamespaceRole": {
        "properties": {
          "other_namespace": {
            "title": "Other Namespace",
            "type": "string"
          },
          "role": {
            "title": "Role",
            "type": "string"
          }
        },
        "required": [
          "other_namespace",
          "role"
        ],
        "title": "APIPostNamespaceRole",
        "type": "object"
      },
      "APIPostSpecification": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/APIPostSpecificationData"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "title": "APIPostSpecification",
        "type": "object"
      },
      "APIPostSpecificationData": {
        "properties": {
          "build_id": {
            "title": "Build Id",
            "type": "integer"
          }
        },
        "required": [
          "build_id"
        ],
        "title": "APIPostSpecificationData",
        "type": "object"
      },
      "APIPostToken": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/APIPostTokenData"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status",
          "data"
        ],
        "title": "APIPostToken",
        "type": "object"
      },
      "APIPostTokenData": {
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          }
        },
        "required": [
          "token"
        ],
        "title": "APIPostTokenData",
        "type": "object"
      },
      "APIPutNamespaceRole": {
        "properties": {
          "other_namespace": {
            "title": "Other Namespace",
            "type": "string"
          },
          "role": {
            "title": "Role",
            "type": "string"
          }
        },
        "required": [
          "other_namespace",
          "role"
        ],
        "title": "APIPutNamespaceRole",
        "type": "object"
      },
      "APIPutSetting": {
        "properties": {
          "data": {
            "title": "Data"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status"
        ],
        "title": "APIPutSetting",
        "type": "object"
      },
      "APIResponse": {
        "properties": {
          "data": {
            "title": "Data"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/APIStatus"
          }
        },
        "required": [
          "status"
        ],
        "title": "APIResponse",
        "type": "object"
      },
      "APIStatus": {
        "description": "An enumeration.",
        "enum": [
          "ok",
          "error"
        ],
        "title": "APIStatus"
      },
      "Body_api_post_specification_api_v1_specification__post": {
        "properties": {
          "environment_description": {
            "default": "",
            "title": "Environment Description",
            "type": "string"
          },
          "environment_name": {
            "default": "",
            "title": "Environment Name",
            "type": "string"
          },
          "is_lockfile": {
            "default": false,
            "title": "Is Lockfile",
            "type": "boolean"
          },
          "namespace": {
            "title": "Namespace",
            "type": "string"
          },
          "specification": {
            "default": "",
            "title": "Specification",
            "type": "string"
          }
        },
        "title": "Body_api_post_specification_api_v1_specification__post",
        "type": "object"
      },
      "Body_api_post_token_api_v1_token__post": {
        "properties": {
          "expiration": {
            "format": "date-time",
            "title": "Expiration",
            "type": "string"
          },
          "primary_namespace": {
            "title": "Primary Namespace",
            "type": "string"
          },
          "role_bindings": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": "Role Bindings",
            "type": "object"
          }
        },
        "title": "Body_api_post_token_api_v1_token__post",
        "type": "object"
      },
      "Body_api_update_environment_build_api_v1_environment__namespace___name___put": {
        "properties": {
          "build_id": {
            "title": "Build Id",
            "type": "integer"
          },
          "description": {
            "title": "Description",
            "type": "string"
          }
        },
        "title": "Body_api_update_environment_build_api_v1_environment__namespace___name___put",
        "type": "object"
      },
      "Body_api_update_namespace_api_v1_namespace__namespace___put": {
        "properties": {
          "metadata": {
            "title": "Metadata",
            "type": "object"
          },
          "role_mappings": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": "Role Mappings",
            "type": "object"
          }
        },
        "title": "Body_api_update_namespace_api_v1_namespace__namespace___put",
        "type": "object"
      },
      "Build": {
        "properties": {
          "build_artifacts": {
            "items": {
              "$ref": "#/components/schemas/BuildArtifact"
            },
            "title": "Build Artifacts",
            "type": "array"
          },
          "ended_on": {
            "format": "date-time",
            "title": "Ended On",
            "type": "string"
          },
          "environment_id": {
            "title": "Environment Id",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "packages": {
            "items": {
              "$ref": "#/components/schemas/CondaPackage"
            },
            "title": "Packages",
            "type": "array"
          },
          "scheduled_on": {
            "format": "date-time",
            "title": "Scheduled On",
            "type": "string"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "specification": {
            "$ref": "#/components/schemas/Specification"
          },
          "started_on": {
            "format": "date-time",
            "title": "Started On",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/BuildStatus"
          },
          "status_info": {
            "title": "Status Info",
            "type": "string"
          }
        },
        "required": [
          "id",
          "environment_id",
          "status",
          "size",
          "scheduled_on"
        ],
        "title": "Build",
        "type": "object"
      },
      "BuildArtifact": {
        "properties": {
          "artifact_type": {
            "$ref": "#/components/schemas/BuildArtifactType"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "key": {
            "title": "Key",
            "type": "string"
          }
        },
        "required": [
          "id",
          "artifact_type",
          "key"
        ],
        "title": "BuildArtifact",
        "type": "object"
      },
      "BuildArtifactType": {
        "description": "An enumeration.",
        "enum": [
          "DIRECTORY",
          "LOCKFILE",
          "LOGS",
          "YAML",
          "CONDA_PACK",
          "DOCKER_BLOB",
          "DOCKER_MANIFEST",
          "CONTAINER_REGISTRY",
          "CONSTRUCTOR_INSTALLER"
        ],
        "title": "BuildArtifactType"
      },
      "BuildStatus": {
        "description": "An enumeration.",
        "enum": [
          "QUEUED",
          "BUILDING",
          "COMPLETED",
          "FAILED",
          "CANCELED"
        ],
        "title": "BuildStatus"
      },
      "CondaChannel": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "last_update": {
            "format": "date-time",
            "title": "Last Update",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "CondaChannel",
        "type": "object"
      },
      "CondaPackage": {
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/CondaChannel"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "license": {
            "title": "License",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "id",
          "channel",
          "name",
          "version"
        ],
        "title": "CondaPackage",
        "type": "object"
      },
      "Environment": {
        "properties": {
          "current_build": {
            "$ref": "#/components/schemas/Build"
          },
          "current_build_id": {
            "title": "Current Build Id",
            "type": "integer"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "namespace": {
            "$ref": "#/components/schemas/Namespace"
          }
        },
        "required": [
          "id",
          "namespace",
          "name",
          "current_build_id"
        ],
        "title": "Environment",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "Namespace": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "metadata_": {
            "title": "Metadata ",
            "type": "object"
          },
          "name": {
            "pattern": "^[A-Za-z0-9-+_@$&?^~.=]+$",
            "title": "Name",
            "type": "string"
          },
          "role_mappings": {
            "default": [],
            "items": {
              "$ref": "#/components/schemas/NamespaceRoleMapping"
            },
            "title": "Role Mappings",
            "type": "array"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "Namespace",
        "type": "object"
      },
      "NamespaceRoleMapping": {
        "properties": {
          "entity": {
            "title": "Entity",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "role": {
            "title": "Role",
            "type": "string"
          }
        },
        "required": [
          "id",
          "entity",
          "role"
        ],
        "title": "NamespaceRoleMapping",
        "type": "object"
      },
      "Specification": {
        "properties": {
          "created_on": {
            "format": "date-time",
            "title": "Created On",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "sha256": {
            "title": "Sha256",
            "type": "string"
          },
          "spec": {
            "title": "Spec",
            "type": "object"
          }
        },
        "required": [
          "id",
          "name",
          "spec",
          "sha256",
          "created_on"
        ],
        "title": "Specification",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      }
    }
  },
  "info": {
    "title": "conda-store",
    "version": "2024.9.1"
  },
  "openapi": "3.1.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "get_conda_store_ui__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Get Conda Store Ui",
        "tags": [
          "conda-store-ui"
        ]
      }
    },
    "/admin/": {
      "get": {
        "operationId": "ui_list_environments_admin__get",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Ui List Environments",
        "tags": [
          "ui"
        ]
      }
    },
    "/admin/build/{build_id}/": {
      "get": {
        "operationId": "ui_get_build_admin_build__build_id___get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Ui Get Build",
        "tags": [
          "ui"
        ]
      }
    },
    "/admin/create/": {
      "get": {
        "operationId": "ui_create_get_environment_admin_create__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Ui Create Get Environment",
        "tags": [
          "ui"
        ]
      }
    },
    "/admin/environment/{namespace}/{environment_name}/": {
      "get": {
        "operationId": "ui_get_environment_admin_environment__namespace___environment_name___get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment_name",
            "required": true,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Ui Get Environment",
        "tags": [
          "ui"
        ]
      }
    },
    "/admin/environment/{namespace}/{environment_name}/edit/": {
      "get": {
        "operationId": "ui_edit_environment_admin_environment__namespace___environment_name__edit__get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment_name",
            "required": true,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Ui Edit Environment",
        "tags": [
          "ui"
        ]
      }
    },
    "/admin/namespace/": {
      "get": {
        "operationId": "ui_list_namespaces_admin_namespace__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Ui List Namespaces",
        "tags": [
          "ui"
        ]
      }
    },
    "/admin/setting/": {
      "get": {
        "operationId": "ui_get_setting_admin_setting__get",
        "parameters": [
          {
            "in": "query",
            "name": "namespace",
            "required": false,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment_name",
            "required": false,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Ui Get Setting",
        "tags": [
          "ui"
        ]
      }
    },
    "/admin/setting/{namespace}/": {
      "get": {
        "operationId": "ui_get_setting_admin_setting__namespace___get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment_name",
            "required": false,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Ui Get Setting",
        "tags": [
          "ui"
        ]
      }
    },
    "/admin/setting/{namespace}/{environment_name}/": {
      "get": {
        "operationId": "ui_get_setting_admin_setting__namespace___environment_name___get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment_name",
            "required": true,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Ui Get Setting",
        "tags": [
          "ui"
        ]
      }
    },
    "/admin/user/": {
      "get": {
        "operationId": "ui_get_user_admin_user__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Ui Get User",
        "tags": [
          "ui"
        ]
      }
    },
    "/api/v1/": {
      "get": {
        "operationId": "api_status_api_v1__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIGetStatus"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Api Status",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/": {
      "get": {
        "operationId": "api_list_builds_api_v1_build__get",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BuildStatus"
            }
          },
          {
            "in": "query",
            "name": "packages",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Packages",
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "artifact",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BuildArtifactType"
            }
          },
          {
            "in": "query",
            "name": "environment_id",
            "required": false,
            "schema": {
              "title": "Environment Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "namespace",
            "required": false,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "title": "Order",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "title": "Size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Sort By",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIListBuild"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api List Builds",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/": {
      "delete": {
        "operationId": "api_delete_build_api_v1_build__build_id___delete",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Delete Build",
        "tags": [
          "api"
        ]
      },
      "get": {
        "operationId": "api_get_build_api_v1_build__build_id___get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIGetBuild"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build",
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_put_build_api_v1_build__build_id___put",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIPostSpecification"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Put Build",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/archive/": {
      "get": {
        "operationId": "api_get_build_archive_api_v1_build__build_id__archive__get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Archive",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/cancel/": {
      "put": {
        "operationId": "api_put_build_cancel_api_v1_build__build_id__cancel__put",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Put Build Cancel",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/conda-lock.yaml": {
      "get": {
        "operationId": "api_get_build_conda_lock_file_api_v1_build__build_id__conda_lock_yaml_get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "namespace",
            "required": false,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment_name",
            "required": false,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Conda Lock File",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/conda-lock.yml": {
      "get": {
        "operationId": "api_get_build_lockfile_api_v1_build__build_id__conda_lock_yml_get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "namespace",
            "required": false,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment_name",
            "required": false,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Lockfile",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/docker/": {
      "get": {
        "operationId": "api_get_build_docker_image_url_api_v1_build__build_id__docker__get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Docker Image Url",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/installer/": {
      "get": {
        "operationId": "api_get_build_installer_api_v1_build__build_id__installer__get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Installer",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/lockfile/": {
      "get": {
        "operationId": "api_get_build_lockfile_api_v1_build__build_id__lockfile__get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "namespace",
            "required": false,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment_name",
            "required": false,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Lockfile",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/logs/": {
      "get": {
        "operationId": "api_get_build_logs_api_v1_build__build_id__logs__get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Logs",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/packages/": {
      "get": {
        "operationId": "api_get_build_packages_api_v1_build__build_id__packages__get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exact",
            "required": false,
            "schema": {
              "title": "Exact",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "build",
            "required": false,
            "schema": {
              "title": "Build",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "title": "Order",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "title": "Size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Sort By",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIListCondaPackage"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Packages",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/build/{build_id}/yaml/": {
      "get": {
        "operationId": "api_get_build_yaml_api_v1_build__build_id__yaml__get",
        "parameters": [
          {
            "in": "path",
            "name": "build_id",
            "required": true,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Yaml",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/channel/": {
      "get": {
        "operationId": "api_list_channels_api_v1_channel__get",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "title": "Order",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "title": "Size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Sort By",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIListCondaChannel"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api List Channels",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/environment/": {
      "get": {
        "description": "Retrieve a list of environments.\n\nParameters\n----------\nauth : Authentication\n    Authentication instance for the request. Used to get role bindings\n    and filter environments returned to those visible by the user making\n    the request\nentity : AuthenticationToken\n    Token of the user making the request\npaginated_args : PaginatedArgs\n    Arguments for controlling pagination of the response\nconda_store : app.CondaStore\n    The running conda store application\nsearch : Optional[str]\n    If specified, filter by environment names or namespace names containing the\n    search term\nnamespace : Optional[str]\n    If specified, filter by environments in the given namespace\nname : Optional[str]\n    If specified, filter by environments with the given name\nstatus : Optional[schema.BuildStatus]\n    If specified, filter by environments with the given status\npackages : Optional[List[str]]\n    If specified, filter by environments containing the given package name(s)\nartifact : Optional[schema.BuildArtifactType]\n    If specified, filter by environments with the given BuildArtifactType\njwt : Optional[schema.AuthenticationToken]\n    If specified, retrieve only the environments accessible to this token; that is,\n    only return environments that the user has 'admin', 'editor', and 'viewer'\n    role bindings for.\n\nReturns\n-------\nDict\n    Paginated JSON response containing the requested environments",
        "operationId": "api_list_environments_api_v1_environment__get",
        "parameters": [
          {
            "in": "query",
            "name": "artifact",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BuildArtifactType"
            }
          },
          {
            "in": "query",
            "name": "jwt",
            "required": false,
            "schema": {
              "title": "Jwt",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "namespace",
            "required": false,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "packages",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Packages",
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BuildStatus"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "title": "Order",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "title": "Size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Sort By",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIListEnvironment"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api List Environments",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/environment/{namespace}/{environment_name}/": {
      "get": {
        "operationId": "api_get_environment_api_v1_environment__namespace___environment_name___get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment_name",
            "required": true,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIGetEnvironment"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Environment",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/environment/{namespace}/{environment_name}/conda-lock.yaml": {
      "get": {
        "operationId": "api_get_build_lockfile_api_v1_environment__namespace___environment_name__conda_lock_yaml_get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment_name",
            "required": true,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "build_id",
            "required": false,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Lockfile",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/environment/{namespace}/{environment_name}/conda-lock.yml": {
      "get": {
        "operationId": "api_get_build_lockfile_api_v1_environment__namespace___environment_name__conda_lock_yml_get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment_name",
            "required": true,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "build_id",
            "required": false,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Lockfile",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/environment/{namespace}/{environment_name}/lockfile/": {
      "get": {
        "operationId": "api_get_build_lockfile_api_v1_environment__namespace___environment_name__lockfile__get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment_name",
            "required": true,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "build_id",
            "required": false,
            "schema": {
              "title": "Build Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Build Lockfile",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/environment/{namespace}/{name}/": {
      "delete": {
        "operationId": "api_delete_environment_api_v1_environment__namespace___name___delete",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Delete Environment",
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_update_environment_build_api_v1_environment__namespace___name___put",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_api_update_environment_build_api_v1_environment__namespace___name___put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Update Environment Build",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/namespace/": {
      "get": {
        "operationId": "api_list_namespaces_api_v1_namespace__get",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "title": "Order",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "title": "Size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Sort By",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIListNamespace"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api List Namespaces",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/namespace/{namespace}/": {
      "delete": {
        "operationId": "api_delete_namespace_api_v1_namespace__namespace___delete",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Delete Namespace",
        "tags": [
          "api"
        ]
      },
      "get": {
        "operationId": "api_get_namespace_api_v1_namespace__namespace___get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIGetNamespace"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Namespace",
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_create_namespace_api_v1_namespace__namespace___post",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Create Namespace",
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_update_namespace_api_v1_namespace__namespace___put",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_api_update_namespace_api_v1_namespace__namespace___put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Update Namespace",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/namespace/{namespace}/metadata": {
      "put": {
        "operationId": "api_update_namespace_metadata_api_v1_namespace__namespace__metadata_put",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Metadata",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Update Namespace Metadata",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/namespace/{namespace}/role": {
      "delete": {
        "operationId": "api_delete_namespace_role_api_v1_namespace__namespace__role_delete",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIDeleteNamespaceRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Delete Namespace Role",
        "tags": [
          "api"
        ]
      },
      "get": {
        "operationId": "api_get_namespace_role_api_v1_namespace__namespace__role_get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "other_namespace",
            "required": true,
            "schema": {
              "title": "Other Namespace",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Namespace Role",
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_create_namespace_role_api_v1_namespace__namespace__role_post",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIPostNamespaceRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Create Namespace Role",
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_update_namespace_role_api_v1_namespace__namespace__role_put",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIPutNamespaceRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Update Namespace Role",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/namespace/{namespace}/roles": {
      "delete": {
        "operationId": "api_delete_namespace_roles_api_v1_namespace__namespace__roles_delete",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIAckResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Delete Namespace Roles",
        "tags": [
          "api"
        ]
      },
      "get": {
        "operationId": "api_get_namespace_roles_api_v1_namespace__namespace__roles_get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Namespace Roles",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/package/": {
      "get": {
        "operationId": "api_list_packages_api_v1_package__get",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exact",
            "required": false,
            "schema": {
              "title": "Exact",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "build",
            "required": false,
            "schema": {
              "title": "Build",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "distinct_on",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Distinct On",
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "title": "Page",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "title": "Order",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "title": "Size",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Sort By",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIListCondaPackage"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api List Packages",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/permission/": {
      "get": {
        "operationId": "api_get_permissions_api_v1_permission__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIGetPermission"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Api Get Permissions",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/setting/": {
      "get": {
        "operationId": "api_get_settings_api_v1_setting__get",
        "parameters": [
          {
            "in": "query",
            "name": "namespace",
            "required": false,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment_name",
            "required": false,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIGetSetting"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Settings",
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_put_settings_api_v1_setting__put",
        "parameters": [
          {
            "in": "query",
            "name": "namespace",
            "required": false,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment_name",
            "required": false,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Data",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIPutSetting"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Put Settings",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/setting/{namespace}/": {
      "get": {
        "operationId": "api_get_settings_api_v1_setting__namespace___get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment_name",
            "required": false,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIGetSetting"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Settings",
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_put_settings_api_v1_setting__namespace___put",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "environment_name",
            "required": false,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Data",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIPutSetting"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Put Settings",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/setting/{namespace}/{environment_name}/": {
      "get": {
        "operationId": "api_get_settings_api_v1_setting__namespace___environment_name___get",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment_name",
            "required": true,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIGetSetting"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Settings",
        "tags": [
          "api"
        ]
      },
      "put": {
        "operationId": "api_put_settings_api_v1_setting__namespace___environment_name___put",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "title": "Namespace",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "environment_name",
            "required": true,
            "schema": {
              "title": "Environment Name",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Data",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIPutSetting"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Put Settings",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/specification/": {
      "get": {
        "operationId": "api_get_specification_api_v1_specification__get",
        "parameters": [
          {
            "in": "query",
            "name": "channel",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Channel",
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "conda",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Conda",
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "pip",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "string"
              },
              "title": "Pip",
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "format",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/APIGetSpecificationFormat"
                }
              ],
              "default": "yaml"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Get Specification",
        "tags": [
          "api"
        ]
      },
      "post": {
        "operationId": "api_post_specification_api_v1_specification__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_api_post_specification_api_v1_specification__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIPostSpecification"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Post Specification",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/token/": {
      "post": {
        "operationId": "api_post_token_api_v1_token__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_api_post_token_api_v1_token__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIPostToken"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Api Post Token",
        "tags": [
          "api"
        ]
      }
    },
    "/api/v1/usage/": {
      "get": {
        "operationId": "api_get_usage_api_v1_usage__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIGetUsage"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Api Get Usage",
        "tags": [
          "api"
        ]
      }
    },
    "/celery": {
      "get": {
        "operationId": "trigger_task_celery_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Trigger Task",
        "tags": [
          "metrics"
        ]
      }
    },
    "/login/": {
      "get": {
        "operationId": "get_login_method_login__get",
        "parameters": [
          {
            "in": "query",
            "name": "next",
            "required": false,
            "schema": {
              "title": "Next",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Login Method",
        "tags": [
          "auth"
        ]
      },
      "post": {
        "operationId": "post_login_method_login__post",
        "parameters": [
          {
            "in": "query",
            "name": "next",
            "required": false,
            "schema": {
              "title": "Next",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Post Login Method",
        "tags": [
          "auth"
        ]
      }
    },
    "/logout/": {
      "post": {
        "operationId": "post_logout_method_logout__post",
        "parameters": [
          {
            "in": "query",
            "name": "next",
            "required": false,
            "schema": {
              "title": "Next",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Post Logout Method",
        "tags": [
          "auth"
        ]
      }
    },
    "/metrics": {
      "get": {
        "operationId": "prometheus_metrics_metrics_get",
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Prometheus Metrics",
        "tags": [
          "metrics"
        ]
      }
    },
    "/v2/": {
      "get": {
        "operationId": "v2_v2__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "V2",
        "tags": [
          "registry"
        ]
      }
    },
    "/v2/{rest}": {
      "get": {
        "operationId": "list_tags_v2__rest__get",
        "parameters": [
          {
            "in": "path",
            "name": "rest",
            "required": true,
            "schema": {
              "title": "Rest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "List Tags",
        "tags": [
          "registry"
        ]
      }
    }
  }
}
