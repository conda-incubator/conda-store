global:
  namespace: conda-store
  condaStoreConfig: |
    import json
    import logging

    from conda_store_server.storage import S3Storage
    from conda_store_server.server.auth import DummyAuthentication


    def conda_store_config(path="/var/lib/conda-store/config.json"):
        with open(path) as f:
            return json.load(f)


    config = conda_store_config()

    # ==================================
    #      conda-store settings
    # ==================================
    c.CondaStore.storage_class = S3Storage
    c.CondaStore.store_directory = "/opt/conda-store/conda-store/"
    c.CondaStore.database_url = f"postgresql+psycopg2://{config['postgres-username']}:{config['postgres-password']}@postgres/conda-store"
    c.CondaStore.redis_url = (
        f"redis://:{config['redis-password']}@redis:6379/0"
    )
    c.CondaStore.default_uid = 1000
    c.CondaStore.default_gid = 100
    c.CondaStore.default_permissions = "555"
    c.CondaStore.conda_included_packages = ["ipykernel"]

    # ==================================
    #      s3 settings
    # ==================================
    c.S3Storage.internal_endpoint = "minio:9000"
    c.S3Storage.internal_secure = False
    c.S3Storage.external_endpoint = "localhost:30900"
    c.S3Storage.external_secure = False
    c.S3Storage.access_key = config["minio-username"]
    c.S3Storage.secret_key = config["minio-password"]
    c.S3Storage.region = "us-east-1"  # minio region default
    c.S3Storage.bucket_name = "conda-store"

    c.CondaStore.default_namespace = "global"
    c.CondaStore.filesystem_namespace = "conda-store"
    c.CondaStore.conda_allowed_channels = []  # allow all channels
    c.CondaStore.conda_indexed_channels = [
        "main",
        "conda-forge",
        "https://repo.anaconda.com/pkgs/main",
    ]
    c.RBACAuthorizationBackend.role_mappings_version = 2

    # ==================================
    #        server settings
    # ==================================
    c.CondaStoreServer.log_level = logging.INFO
    c.CondaStoreServer.log_format = (
        "%(asctime)s %(levelname)9s %(name)s:%(lineno)4s: %(message)s"
    )
    c.CondaStoreServer.enable_ui = True
    c.CondaStoreServer.enable_api = True
    c.CondaStoreServer.enable_registry = True
    c.CondaStoreServer.enable_metrics = True
    c.CondaStoreServer.address = "0.0.0.0"
    c.CondaStoreServer.port = 8080
    c.CondaStoreServer.behind_proxy = True
    # This MUST start with `/`
    c.CondaStoreServer.url_prefix = "/"

    # ==================================
    #         auth settings
    # ==================================
    c.CondaStoreServer.authentication_class = DummyAuthentication


    # ==================================
    #         worker settings
    # ==================================
    c.CondaStoreWorker.log_level = logging.INFO
    c.CondaStoreWorker.watch_paths = ["/opt/environments"]
    c.CondaStoreWorker.concurrency = 4

    # Template used to form the directory for symlinking conda environment builds.
    c.CondaStore.environment_directory = "{store_directory}/{namespace}/envs/{namespace}-{name}"
  condaStoreConfigSecretsName: conda-store-secret

apiServer:
  nodePort: 30501
  port: 8080
  replicas: 1
  image:
    repository: quansight/conda-store-server
    pullPolicy: IfNotPresent
    tag: 2024.6.1

uiServer:
  nodePort: 30500
  port: 8080
  replicas: 1
  image:
    repository: quansight/conda-store-server
    pullPolicy: IfNotPresent
    tag: 2024.6.1

worker:
  port: 8080
  replicas: 1
  image:
    repository: quansight/conda-store-server
    pullPolicy: IfNotPresent
    tag: 2024.6.1
