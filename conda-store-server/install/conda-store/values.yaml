podAnnotations: {}
podLabels: {}

global:
  # The namespace to deploy to. Defaults to the `helm` installation namespace.
  namespace: ""

apiServer:
  # Node port for the API Server K8 service
  nodePort: 30501

  # Port the service will be accessible on. To port forward this service
  # try `kubectl port-forward -n conda-store service/conda-store-api-server <port>:8080`
  port: 8081

  # Number of API Servers replica pods to start up
  replicas: 1

  # Image to use for the api server
  image:
    repository: quansight/conda-store-server
    pullPolicy: IfNotPresent
    tag: 2024.6.1

  # Config for the conda-store-server. For all available options, see the 
  # docs at https://conda.store/conda-store/references/configuration-options
  # The following env vars are injected into the container if required:
  #  * POSTGRES_USERNAME
  #  * POSTGRES_PASSWORD
  #  * MINIO_USERNAME
  #  * MINIO_PASSWORD
  #  * REDIS_PASSWORD
  condaStoreConfig: ""

  # This is to setup the liveness and readiness probes more information can be
  # found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

uiServer:
  # Node port for the UI Server K8 service
  nodePort: 30500

  # Port the service will be accessible on. To port forward this service
  # try `kubectl port-forward -n conda-store service/conda-store-ui-server <port>:8080`
  port: 8080

  # Number of API Servers replica pods to start up
  replicas: 1

  # Image to use for the ui server
  image:
    repository: quansight/conda-store-server
    pullPolicy: IfNotPresent
    tag: 2024.6.1

  # Config for the conda-store-server. For all available options, see the 
  # docs at https://conda.store/conda-store/references/configuration-options
  condaStoreConfig: ""

  # This is to setup the liveness and readiness probes more information can be
  # found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

worker:
  # Number of workers that are to be in the worker deployment
  replicas: 2
  
  # Image for the worker container
  image:
    repository: quansight/conda-store-server
    pullPolicy: IfNotPresent
    tag: 2024.6.1
  
  # Volume attached to the worker volumes that contains conda environments 
  # and packages. This will bind to the worker with a PVC. To bind your 
  # PV to the PVC ensure to set the claim ref on your volume. For example
  # ```
  #   spec:
  #     accessModes:
  #       - ReadWriteMany
  #     storageClassName: ""
  #     claimRef:
  #       name: conda-store-worker-claim
  # ```
  environmentsVolume: ""

  # Size of the environmentsVolume
  environmentsVolumeSize: 2Gi

  # Config for the conda-store-server. For all available options, see the 
  # docs at https://conda.store/conda-store/references/configuration-options
  # The following env vars are injected into the container if required:
  #  * POSTGRES_USERNAME
  #  * POSTGRES_PASSWORD
  #  * MINIO_USERNAME
  #  * MINIO_PASSWORD
  #  * REDIS_PASSWORD
  condaStoreConfig: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
