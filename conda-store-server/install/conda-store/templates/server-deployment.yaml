apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "condaStore.fullname" . }}-server"
  namespace: {{ .Values.global.namespace }}
  labels:
    helm.sh/chart: {{ include "condaStore.chart" . }}
    app.kubernetes.io/name: {{ include "condaStore.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app: "{{ template "condaStore.fullname" . }}-server"
spec:
  replicas: {{ .Values.server.replicas }}
  selector:
    matchLabels:
      app: "{{ template "condaStore.fullname" . }}-server"
  template:
    metadata:
      labels:
        helm.sh/chart: {{ include "condaStore.chart" . }}
        app.kubernetes.io/name: {{ include "condaStore.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app: "{{ template "condaStore.fullname" . }}-server"
    spec:
      containers:
        - name: "{{ template "condaStore.fullname" . }}-server"
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          args:
            - "conda-store-server"
            - "--config"
            - "/etc/conda-store/conda_store_config.py"
          ports:
            - containerPort: {{ .Values.server.port }}
          volumeMounts:
            - name: config
              mountPath: "/etc/conda-store/"
              readOnly: true
            - name: secret
              mountPath: "/var/lib/conda-store"
              readOnly: true
            - name: home
              mountPath: "/home/conda"
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: "{{ template "condaStore.fullname" . }}"
        - name: secret
          secret:
            secretName: {{ .Values.global.condaStoreConfigSecretsName }}
        - name: home
          emptyDir:
            sizeLimit: 1Mi
