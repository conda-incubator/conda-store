"""add_cancelled_enum

Revision ID: 6d477abab205
Revises: cbe7aabdbc88
Create Date: 2023-02-01 16:37:31.252209

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6d477abab205'
down_revision = 'cbe7aabdbc88'
branch_labels = None
depends_on = None

enum_name = "buildstatus"
tmp_enum_name = f'_{enum_name}'

old = ("QUEUED", "BUILDING", "COMPLETED", "FAILED") 
new = ("QUEUED", "BUILDING", "COMPLETED", "CANCELLED", "FAILED" ) 

old_type = sa.Enum(*old, name=enum_name)
new_type = sa.Enum(*new, name=enum_name)
tmp_type = sa.Enum(*new, name=tmp_enum_name)

table = 'build'
column = 'status'

def upgrade():
    tmp_type.create(op.get_bind(), checkfirst=False)
    op.execute(f'ALTER TABLE {table} ALTER COLUMN {column} TYPE {tmp_enum_name} USING {column}::text::{tmp_enum_name}')
    
    old_type.drop(op.get_bind(), checkfirst=False)

    new_type.create(op.get_bind())
    op.execute(f'ALTER TABLE {table} ALTER COLUMN {column} TYPE {enum_name} USING {column}::text::{enum_name}')
    tmp_type.drop(op.get_bind(), checkfirst=False)
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade():
    build = sa.sql.table('build',sa.Column("status", new_type, nullable=True))
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(build.update().where(build.c.status==u'CANCELLED').values(status='FAILED'))

    tmp_type.create(op.get_bind(), checkfirst=False)
    op.execute(f'ALTER TABLE {table} ALTER COLUMN {column} TYPE {tmp_enum_name} USING {column}::text::{tmp_enum_name}')

    new_type.drop(op.get_bind(), checkfirst=False)
    # Create and convert to the "old" status type
    old_type.create(op.get_bind(), checkfirst=False)
    op.execute(f'ALTER TABLE {table} ALTER COLUMN {column} TYPE {enum_name} USING {column}::text::{enum_name}')
    tmp_type.drop(op.get_bind(), checkfirst=False)
    pass
    # ### end Alembic commands ###
